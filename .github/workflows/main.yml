name: New Release
 
on:
  push:
    branches: ["main"]
 
jobs:
  build:
      name: Build and Test
      timeout-minutes: 15
      runs-on: ubuntu-latest
      # To use Remote Caching, uncomment the next lines and follow the steps below.
      # env:
      #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      #  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
 
      steps:
        - name: Check out code
          uses: actions/checkout@v4
          with:
            fetch-depth: 2
 
        - name: Setup Node.js environment
          uses: actions/setup-node@v4
          with:
            node-version: 20
            cache: 'yarn'
 
        - name: Install dependencies
          run: yarn
 
        - name: Build
          run: yarn build
 
        - name: Test
          run: yarn test

        - name: Build Storybook
          run: yarn build:storybook

        - name: Deploy ðŸš€
          uses: JamesIves/github-pages-deploy-action@v4
          with:
            branch: gh-pages
            folder: docs
            target-folder: docs
            clean: true

        - name: List output files
          run: ls apps/openwrt-config-dashboard/dist

        - name: Archive Production Artifact
          uses: actions/upload-artifact@v4
          with:
            name: openwrt-config-dashboard
            path: apps/openwrt-config-dashboard/dist

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: openwrt-config-dashboard

      - name: List files
        run: ls -R

      - name: Compress Artifact
        run: |
          zip -r openwrt-config-dashboard.zip index.html
          zip -r openwrt-config-dashboard.zip assets

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          files: |
            ./openwrt-config-dashboard.zip
